
provable
========

formula provable?
formula provable in theory?

SYNTAX
- provable(A) 
- provable(A, T) 

PARAMETERS
- A: formula

RESULT:  true  or  false 

SYNOPSIS

- One argument:  provable  tests whether the formula  A  is provable in  ktn .
- Two arguments:  provable  tests whether the formula  A  is provable in  
  ktn  plus the theory  T .
- If  provable  is too slow, you can try to apply one of the following 
  facts: 
  If  cpc(A)  is not provable in  cpc , then  A  is not provable in  ktn . 
  kn(A)  is provable in  kn  iff  A  is provable in  ktn . 
  If  A  is provable in  cpc , then  A  is provable in  ktn . 
  If  A  is provable in  kn , then  A  is provable in  ktn .
- Choose an appropriate infolevel for additional information during the 
  execution (e.g.  set("infolevel",4) ). 
  Displayed sequents have the form  [LV],[L1],[L2],[L3]=>[RV],[R1],[R2],[R3] .
  The parts of the sequent contain the following formulas:  LV  and  RV : 
  variables,  L1 :  v ,  -> ,  <->  formulas,  R1 :  & ,  <->  formulas,  L2 
  and  R2 :  box  formulas,  L3  and  R3 :  dia  formulas.

EXAMPLE

> provable(box3(p0 -> p1) & box3 p0 -> p1);
	true
> set("infolevel", 4);
	true
> provable(box3(p0 -> p1) & box3 p0 -> p1);
ktn::provable( A = box3 (p0 -> p1) & box3 p0 -> p1 )
(r ->)
(l &)
(l box)
(l box)
[p0],[p0 -> p1],[box3 (p0 -> p1), box3 p0],[]==>[p1],[],[],[]
(l ->)
1.[p0],[],[box3 (p0 -> p1), box3 p0],[]==>[p0, p1],[],[],[]
axiom (id)
2.[p1, p0],[],[box3 (p0 -> p1), box3 p0],[]==>[p1],[],[],[]
axiom (id)
Result of ktn::provable: true.
	true
> provable(p1, [p0, box1(p0 -> p1)]);
ktn::provable( A = p1, T = [p0, box1 (p0 -> p1)] )
(l box)
[p0],[p0 -> p1],[box1 (p0 -> p1)],[]==>[p1],[],[],[]
(l ->)
1.[p0],[],[box1 (p0 -> p1)],[]==>[p0, p1],[],[],[]
axiom (id)
2.[p1, p0],[],[box1 (p0 -> p1)],[]==>[p1],[],[],[]
axiom (id)
Result of ktn::provable: true.
	true

SEE ALSO
  consistent, satisfiable

