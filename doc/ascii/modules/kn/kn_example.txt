
kn example
==========


Language
--------

At first we load the module  kn .

> load(kn);
	kn  user  

Formulas of  kn  are built from the connectives  box0 ,  box1 ,  box2 , ..., 
dia0 ,  dia1 ,  dia2 , ..., from the connectives of classical propositional 
logic, namely  &  (conjunction),  v  (disjunction),  ->  (implication),  <-> 
(equivalence),  ~  (negation), the two constants  true  and  false , and 
from variables.
Theories are lists of formulas.

> a := (box1 p -> q) <-> dia2(q2 & true v box2 ~false);
	box1 p -> q <-> dia2 (q2 & true v box2 ~false)
> b := qq -> p112;
	qq -> p112
> t := [a, b];
	[box1 p -> q <-> dia2 (q2 & true v box2 ~false), qq -> p112]
> typek(a, "fml");
	true
> typek(b[1], "var");
	true
> typek(t, "theory");
	true

You can also use  and ,  or ,  imp ,  eq ,  not  instead of  & ,  v ,  -> ,  
<-> ,  ~ .

> a1 := p & q v r -> s <-> p; 
	p & q v r -> s <-> p
> a2 := p and q or r imp s eq p; 
	p & q v r -> s <-> p
> a1 = a2;
	true

In the possible world semantics,  box p  means that  p  is true in all 
accessible worlds, and  dia p  means that there is an accessible world where 
p  is true.


Normal forms
------------

In the modal logic  kn  there exists a negation normal form.

> a := box1(p & q v p) -> ~ dia5 dia6 ~q;
	box1 (p & q v p) -> ~dia5 dia6 ~q
> nnf(a);
	dia1 ((~p v ~q) & ~p) v box5 box6 q

This normal forms is not unique as the following example shows.

> b := dia1 ~p v box5 box6 q;
	dia1 ~p v box5 box6 q
> nnfp(b);
	true
> provable(a <-> b);
	true

If a formula contains equivalencies, the result of  nnf  can be very long 
compared to the original formula.

> c := dia0 p0 <-> dia1 p1 <-> dia2 p2 <-> dia3 p3 <-> dia4 p4 <-> dia5 p5;
	dia0 p0 <-> dia1 p1 <-> dia2 p2 <-> dia3 p3 <-> dia4 p4 <-> dia5 p5
> length(c);
	17
> length(nnf(c));
	328


Typical provable formulas
-------------------------

All formulas that are provable in classical propositional logic are also 
provable in the modal logic  kn .
Therefore we concentrate on formulas typical for  kn .

> provable( box2(p & q)  <->  box2 p & box2 q );
	true
> provable( dia3(p v q)  <->  dia3 p v dia3 q );
	true
> provable( ~ box7 ~ p  <-> dia7 p );
	true

A famous example is the so-called wise men example. There  box1 p  means 
`man 1 knows that p',  white1  means `man 1 has a white spot on his 
forehead'. (The  wisemen  function computes these theories.)

> t := [box1(white1 v white2 v white3),
        box2(white1 v white2 v white3),
        box3(white1 v white2 v white3),
        ~white1 -> box2 ~white1, ~white1 -> box3 ~white1,
        ~white2 -> box1 ~white2, ~white2 -> box3 ~white2,
        ~white3 -> box1 ~white3, ~white3 -> box2 ~white3,
        ~ box1 white1, ~ box2 white2 ];
	[box1 (white1 v white2 v white3), box2 (white1 v white2 v white3), box3 
(white1 v white2 v white3), ~white1 -> box2 ~white1, ~white1 -> box3 
~white1, ~white2 -> box1 ~white2, ~white2 -> box3 ~white2, ~white3 -> box1 
~white3, ~white3 -> box2 ~white3, ~box1 white1, ~box2 white2]
> provable(box3 white3, t);
	true


Typical non-provable formulas
-----------------------------

> provable(box2 p -> p);
	false
> provable(box0 box0 p -> box0 p);
	false
> provable(~ box4 p -> box4 box4 p);
	false

