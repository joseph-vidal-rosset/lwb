
provable
========

formula provable?
formula provable in theory?

SYNTAX
- provable(A) 
- provable(A, T) 

PARAMETERS
- A: formula
- T: theory

RESULT:  true  or  false 

SYNOPSIS

- One argument:  provable  tests whether the formula  A  is provable in  kt .
- Two arguments:  provable  tests whether the formula  A  is provable in  kt 
  plus the theory  T .
- If  provable  is too slow, you can try to apply one of the following 
  facts: 
  If  cpc(A)  is not provable in  cpc , then  A  is not provable in  kt . 
  If  A  is provable in  cpc , then  A  is provable in  kt . 
  If  A  is provable in  k , then  A  is provable in  kt .
- Choose an appropriate infolevel for additional information during the 
  execution (e.g.  set("infolevel",5) ). 
  Displayed sequents have the form  [LV],[L1],[L2],[L3]=>[RV],[R1],[R2],[R3] .
  The parts of the sequent contain the following formulas:  LV  and  RV : 
  variables,  L1 :  v ,  -> ,  <->  formulas,  R1 :  & ,  <->  formulas,  L2 
  and  R2 :  box  formulas,  L3  and  R3 :  dia  formulas.

EXAMPLE

> provable(box p1 -> p1);
	true
> provable(dia dia p2 -> dia p2);
	false
> provable(box p0 v box p1, [p3 v p4, box box p0]);
	true
> set("infolevel", 4);
	true
> provable(box(p0 & p1) -> p0 & box p1);
kt::provable( A = box (p0 & p1) -> p0 & box p1 )
(r ->)
(l box)
(l &)
[p0, p1],[],[box (p0 & p1)],[]==>[],[p0 & box p1],[],[]
(r &)
1.[p0, p1],[],[box (p0 & p1)],[]==>[p0],[],[],[]
axiom (id)
2.[p0, p1],[],[box (p0 & p1)],[]==>[],[],[box p1],[]
(r box) with main formula box p1
(l &)
2.1.[p0, p1],[],[],[]==>[p1],[],[],[]
axiom (id)
Result of kt::provable: true.
	true

SEE ALSO
  consistent, satisfiable

