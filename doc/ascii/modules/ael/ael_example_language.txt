
Language example
================


Language
--------

At first we load the module  ael .

> load(ael);
	ael  user  

The formulas of  ael  are the formulas of  cpc , i.e. they are built from 
the symbols for conjunction ( & ), disjunction ( v ), implication ( -> ), 
equivalence ( <-> ), negation ( ~ ), the two constants  true  and  false , 
and variables.
Theories are list of formulas.

> A := (p0 v false) -> (p2 & true <-> ~ ~p3);
	p0 v false -> (p2 & true <-> ~~p3)
> B := p0 -> (p1 -> p0);
	p0 -> p1 -> p0
> T := [A, B, p2 v p3];
	[p0 v false -> (p2 & true <-> ~~p3), p0 -> p1 -> p0, p2 v p3]
> typek(A, "fml");
	true
> typek(B[2][1], "var");
	true
> typek(T, "theory");
	true
> unassign(A, B);

You can also use  and ,  or ,  imp ,  eq ,  not  instead of  & ,  v ,  -> ,  
<-> ,  ~ .

> C1 := p0 & (p1 v p0) -> p2 <-> p0; 
	p0 & (p1 v p0) -> p2 <-> p0
> C2 := p0 and (p1 or p0) imp p2 eq p0; 
	p0 & (p1 v p0) -> p2 <-> p0
> C1 = C2;
	true

