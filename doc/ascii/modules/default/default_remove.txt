
remove
======

remove superfluous connectives and subformulas

SYNTAX
- remove(A) 
- remove(A, "provable") 
- remove(A, "unary") 
- remove(T) 
- remove(T, "provable") 
- remove(T, "unary") 
- remove(Td) 
- remove(Td, "provable") 
- remove(Td, "unary") 

PARAMETERS
- A: formula
- T: theory
- Td: default theory

RESULT:  formula resp. theory resp. default theory

SYNOPSIS

- One argument:  remove  removes  false  and  true  in the formula  A  resp. 
  in the theory  T  resp. in the default theory  Td  (as far as possible 
  without introducing new variables).
- Option  "provable" :  remove  removes subformulas in  A  resp. in  T  
  resp. in  Td  that are equivalent to  true  or to  false  (as far as 
  possible without introducing new variables).
- Option  "unary" :  remove  removes superfluous negation symbols, i.e.  ~ 
  ~B  is converted to  B , and in equivalences at most one  ~  occurs. No 
  other connectives are changed.
- The result is equivalent to  A  resp. to  T  (in  cpc ), resp. the set of 
  extensions of the result is equivalent to the set of extensions of  Td .

EXAMPLE

> remove((true <-> p0) & ~p1 -> false);
	~(p0 & ~p1)
> remove([ [p0 & true,~false -> p1], [[p0,~p2,~p2],[true & p2,p3,p3 v false]] ]);
	[[p0, p1], [[p0, ~p2, ~p2], [p2, p3, p3]]]
> remove([true, ~(p0 v p1 v ~p0) <-> true], "provable");
	[false]
> remove(~ ~(p0 v ~(~p1 <-> ~(~p2 <-> ~p3))), "unary");
	p0 v (p1 <-> (p2 <-> ~p3))

SEE ALSO
  provable

