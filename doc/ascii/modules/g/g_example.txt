
g example
=========


Language
--------

At first we load the module  g .

> load(g);
	executing init_g
	g  user  

Formulas of  g  are built from the connectives  box  and  dia , from the 
connectives of classical propositional logic, namely  &  (conjunction),  v  
(disjunction),  ->  (implication),  <->  (equivalence),  ~  (negation), the 
two constants  true  and  false , and from variables.
Theories are lists of formulas.

> a := ((p <-> dia q) -> ~ dia false) v p & true;
	((p <-> dia q) -> ~dia false) v p & true
> b := qr -> p55;
	qr -> p55
> t := [a, b];
	[((p <-> dia q) -> ~dia false) v p & true, qr -> p55]
> typek(a, "fml");
	true
> typek(b[1], "var");
	true
> typek(t, "theory");
	true

You can also use  and ,  or ,  imp ,  eq ,  not  instead of  & ,  v ,  -> ,  
<-> ,  ~ .

> a1 := p & q v r -> s <-> p; 
	p & q v r -> s <-> p
> a2 := p and q or r imp s eq p; 
	p & q v r -> s <-> p
> a1 = a2;
	true


Normal forms
------------

In the modal logic  g  there exists a negation normal form.

> a := box ~ box p -> q;
	box ~box p -> q
> nnf(a);
	dia box p v q

This normal forms is not unique as the following example shows.

> b := dia box ~p v q & dia p v q;
	dia box ~p v q & dia p v q
> nnfp(b);
	true
> provable(a <-> b);
	true

If a formula contains equivalencies, the result of  nnf  can be very long 
compared to the original formula.

> c := box p0 <-> box p1 <-> box p2 <-> box p3 <-> box p4 <-> box p5;
	box p0 <-> box p1 <-> box p2 <-> box p3 <-> box p4 <-> box p5
> length(c);
	17
> length(nnf(c));
	328


Typical provable formulas
-------------------------

All formulas that are provable in classical propositional logic are also 
provable in the modal logic  g .
Therefore we concentrate on formulas typical for  g .

> provable( box(p & q)  <->  box p & box q );
	true
> provable( dia(p v q)  <->  dia p v dia q );
	true
> provable( ~ box ~ p  <->  dia p );
	true
> provable( box(box p -> p) -> box p );
	true
> provable( box p -> box box p );
	true


Typical non-provable formulas
-----------------------------

Two axioms of the modal logic  s5  are not provable in  g .

> provable( box p -> p );
	false
> provable( ~ box p -> box ~ box p );
	false

